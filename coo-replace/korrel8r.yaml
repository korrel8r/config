apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: korrel8r
    app.kubernetes.io/managed-by: observability-operator
    app.kubernetes.io/part-of: UIPlugin
  name: korrel8r-replace
  namespace: openshift-cluster-observability-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: korrel8r
      app.kubernetes.io/managed-by: observability-operator
      app.kubernetes.io/part-of: UIPlugin
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: korrel8r
        app.kubernetes.io/managed-by: observability-operator
        app.kubernetes.io/part-of: UIPlugin
      name: korrel8r-replace
      namespace: openshift-cluster-observability-operator
    spec:
      containers:
      - command:
        - korrel8r
        - web
        - --https=:9443
        - --cert=/secrets/tls.crt
        - --key=/secrets/tls.key
        - --config=/config/korrel8r.yaml
        image: quay.io/alanconway/korrel8r:latest
        imagePullPolicy: Always
        name: korrel8r
        ports:
        - containerPort: 9443
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secrets/
          name: serving-cert
          readOnly: true
        - mountPath: /config/
          name: korrel8r-config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: troubleshooting-panel-sa
      serviceAccountName: troubleshooting-panel-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: korrel8r
      - configMap:
          defaultMode: 420
          name: korrel8r
        name: korrel8r-config
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: korrel8r
spec:
  to:
    kind: Service
    name: korrel8r
  tls:
    termination: reencrypt
